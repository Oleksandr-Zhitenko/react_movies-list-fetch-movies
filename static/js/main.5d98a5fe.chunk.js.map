{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","loadMovie","title","a","fetch","response","json","FindMovie","addMovie","useState","setTitle","foundedMovie","setFoundedMovie","error","setError","findMovie","e","preventDefault","Response","onSubmit","htmlFor","type","id","placeholder","value","onChange","target","onClick","newMovie","App","setMovies","moviesCopy","find","ReactDOM","render","document","getElementById"],"mappings":"8TAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,KACP,iCC7BGC,EAA8B,SAACR,GAC1C,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,uBCbRC,G,MAAS,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACAC,MAHD,0DAGkBF,GADjB,cACjBG,EADiB,yBAGhBA,EAASC,QAHO,2CAAH,uDCOTC,EAA6B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3C,EAA0BC,mBAAS,IAAnC,mBAAOP,EAAP,KAAcQ,EAAd,KACA,EAAwCD,mBAAuB,MAA/D,mBAAOE,EAAP,KAAqBC,EAArB,KACA,EAA0BH,mBAAS,IAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAMMC,EAAS,uCAAG,WAAOC,GAAP,eAAAb,EAAA,6DAChBa,EAAEC,iBADc,SAGIhB,EAAUC,GAHd,OAGVZ,EAHU,OAKhBwB,EAAS,IACc,UAAnBxB,EAAM4B,SACRN,EAAgBtB,GAEhBwB,EAAS,wCATK,2CAAH,sDA4Bf,OACE,qCACE,uBAAMvB,UAAU,aAAa4B,SAAUJ,EAAvC,UACE,sBAAKxB,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQ6B,QAAQ,cAAjC,yBAIA,qBAAK7B,UAAU,UAAf,SACE,uBACE8B,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZC,MAAOtB,EACPuB,SA9CQ,SAACT,GACnBN,EAASM,EAAEU,OAAOF,QA8CRjC,UAAU,sBAId,mBAAGA,UAAU,iBAAb,SACGsB,OAKL,sBAAKtB,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE8B,KAAK,SACL9B,UAAU,kBACVoC,QAASZ,EAHX,4BASF,qBAAKxB,UAAU,UAAf,SACE,wBACE8B,KAAK,SACLM,QAtDW,WACrB,GAAIhB,EAAc,CAChB,IAAMiB,EAAW,CACfnC,OAAQkB,EAAalB,OACrBE,MAAOgB,EAAahB,MACpBC,KAAMe,EAAaf,KACnBI,OAAQW,EAAaX,QAGvBQ,EAASoB,GAGXhB,EAAgB,OA2CNrB,UAAU,oBAHZ,qCAWN,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACCoB,GACI,cAAC,EAAD,CAAWrB,MAAOqB,WCxFlBkB,EAAuB,WAClC,MAA4BpB,mBAAkB,IAA9C,mBAAOX,EAAP,KAAegC,EAAf,KAUA,OACE,sBAAKvC,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CAAWiB,SAdA,SAACoB,GAChB,IAAMG,EAAmB,YAAOjC,GAE3BiC,EAAWC,MAAK,SAAA1C,GAAK,OAAKA,EAAMU,SAAW4B,EAAS5B,WACvD8B,EAAU,GAAD,mBAAKC,GAAL,CAAiBH,cCZhCK,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5d98a5fe.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","export const BASE_URL = 'https://www.omdbapi.com/?i=tt3896198&apikey=b61f4eb3&t=';\n\nexport const loadMovie = async (title: string) => {\n  const response = await fetch(BASE_URL + title);\n\n  return response.json();\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport { loadMovie } from '../../api/api';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovie: (movie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [foundedMovie, setFoundedMovie] = useState<Movie | null>(null);\n  const [error, setError] = useState('');\n\n  const handleInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  };\n\n  const findMovie = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    const movie = await loadMovie(title);\n\n    setError('');\n    if (movie.Response !== 'False') {\n      setFoundedMovie(movie);\n    } else {\n      setError('Can\\'t find a movie with such a title');\n    }\n  };\n\n  const handleMovieAdd = () => {\n    if (foundedMovie) {\n      const newMovie = {\n        Poster: foundedMovie.Poster,\n        Title: foundedMovie.Title,\n        Plot: foundedMovie.Plot,\n        imdbID: foundedMovie.imdbID,\n      };\n\n      addMovie(newMovie);\n    }\n\n    setFoundedMovie(null);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={findMovie}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              value={title}\n              onChange={handleInput}\n              className=\"input is-danger\"\n            />\n          </div>\n\n          <p className=\"help is-danger\">\n            {error}\n          </p>\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              onClick={handleMovieAdd}\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {foundedMovie\n          && <MovieCard movie={foundedMovie} />}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\ninterface State {\n  movies?: Movie[];\n}\n\nexport const App: React.FC<State> = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (newMovie: Movie) => {\n    const moviesCopy: Movie[] = [...movies];\n\n    if (!moviesCopy.find(movie => (movie.imdbID === newMovie.imdbID))) {\n      setMovies([...moviesCopy, newMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}